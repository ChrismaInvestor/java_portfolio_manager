{"version":3,"file":"static/js/4.00fff90b.chunk.js","mappings":"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","sources":["api/ListPortfolios.ts","context/SettingsContext.ts","component/AddPortfolioSection.tsx","component/ShowPortfolioCard.tsx","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/ListItemButton/ListItemButton.js","component/ShowPortfoliosSection.tsx","pages/SettingsPage.tsx"],"sourcesContent":["import { Portfolio } from \"../component/AddPortfolioSection\";\r\nimport { BASE_URL } from \"../constant/Constant\";\r\n\r\nexport const listPortfolios = async () => {\r\n  const res = await fetch(BASE_URL + \"portfolio\", {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n\r\n  if (res.status === 200) {\r\n    const result: Portfolio[] = await res.json();\r\n    return result;\r\n  }\r\n};\r\n","import { createContext } from \"react\";\r\nimport { Action, Context } from \"./OrderPlacementContext\";\r\n\r\nexport const SettingsContext = createContext<Context>({});\r\n\r\ntype State = {\r\n  updateCount: number;\r\n};\r\n\r\nexport function settingsReducer(state: State, action: Action) {\r\n  switch (action.type) {\r\n    case \"countUpdate\":\r\n      return { ...state, updateCount: state.updateCount + 1 };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import { Button, Grid, Paper, TextField, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BASE_URL } from \"../constant/Constant\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport { SettingsContext } from \"../context/SettingsContext\";\r\n\r\nexport type Portfolio = {\r\n  name: string;\r\n  description: string;\r\n  account: string;\r\n};\r\n\r\nexport default function AddPortfolioSection() {\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  const { dispatch } = React.useContext(SettingsContext);\r\n\r\n  const [portfolio, setPortfolio] = React.useState<Portfolio>({\r\n    name: \"\",\r\n    description: \"\",\r\n    account: \"\",\r\n  });\r\n\r\n  const handleChange = (e: {\r\n    target: HTMLInputElement | HTMLTextAreaElement;\r\n  }) => {\r\n    const { name, value } = e.target;\r\n    setPortfolio((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: () => {\r\n      return fetch(BASE_URL + \"portfolio\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(portfolio),\r\n      });\r\n    },\r\n  });\r\n\r\n  React.useMemo(() => {\r\n    dispatch && dispatch({ type: \"countUpdate\" });\r\n  }, [mutation.status === \"success\"]);\r\n\r\n  return (\r\n    <Paper sx={{ m: 2, p: 2 }}>\r\n      <form ref={formRef}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">新增投资组合</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"名称\"\r\n              fullWidth\r\n              placeholder=\"请输入投资组合名称\"\r\n              name=\"name\"\r\n              value={portfolio.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"描述\"\r\n              fullWidth\r\n              placeholder=\"请描述该投资组合\"\r\n              name=\"description\"\r\n              value={portfolio.description}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"关联账户\"\r\n              fullWidth\r\n              placeholder=\"请输入在券商的关联账户\"\r\n              name=\"account\"\r\n              value={portfolio.account}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {mutation.isLoading ? (\r\n              <LoadingButton\r\n                loading={mutation.isLoading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                variant=\"contained\"\r\n                disabled\r\n              >\r\n                <span>创建中</span>\r\n              </LoadingButton>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{ width: \"25%\" }}\r\n                onClick={() => {\r\n                  if (formRef.current?.reportValidity()) {\r\n                    mutation.mutate();\r\n                  }\r\n                }}\r\n              >\r\n                新增\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Grid, Stack, Typography } from \"@mui/material\";\r\nimport { Portfolio } from \"./AddPortfolioSection\";\r\n\r\nexport default function ShowPortfolioCard(props: Portfolio) {\r\n  const { name, description, account } = props;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6}>\r\n        <Stack spacing={1}>\r\n          <Typography>\r\n            <strong>{name}</strong>\r\n          </Typography>\r\n          <Typography>{account}</Typography>\r\n        </Stack>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Stack spacing={1}>\r\n          <Typography variant=\"body2\">{description}</Typography>\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alignItems\", \"autoFocus\", \"component\", \"children\", \"dense\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemButtonClasses, { getListItemButtonUtilityClass } from './listItemButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    divider,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', divider && 'divider', disabled && 'disabled', alignItems === 'flex-start' && 'alignItemsFlexStart', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst ListItemButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiListItemButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minWidth: 0,\n  boxSizing: 'border-box',\n  textAlign: 'left',\n  paddingTop: 8,\n  paddingBottom: 8,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemButtonClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemButtonClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemButtonClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}));\nconst ListItemButton = /*#__PURE__*/React.forwardRef(function ListItemButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemButton'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      component = 'div',\n      children,\n      dense = false,\n      disableGutters = false,\n      divider = false,\n      focusVisibleClassName,\n      selected = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItemButton whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    dense: childContext.dense,\n    disableGutters,\n    divider,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(ListItemButtonRoot, _extends({\n      ref: handleRef,\n      href: other.href || other.to\n      // `ButtonBase` processes `href` or `to` if `component` is set to 'button'\n      ,\n      component: (other.href || other.to) && component === 'div' ? 'button' : component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ownerState: ownerState,\n      className: clsx(classes.root, className)\n    }, other, {\n      classes: classes,\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemButton;","import React from \"react\";\r\nimport { Portfolio } from \"./AddPortfolioSection\";\r\nimport ShowPortfolioCard from \"./ShowPortfolioCard\";\r\nimport { Box, List, ListItemButton, Stack } from \"@mui/material\";\r\nimport { listPortfolios } from \"../api/ListPortfolios\";\r\nimport { SettingsContext } from \"../context/SettingsContext\";\r\n\r\nexport default function ShowPortfoliosSection() {\r\n  const [portfolios, setPortfolios] = React.useState<Portfolio[]>([]);\r\n\r\n  const { state } = React.useContext(SettingsContext);\r\n\r\n  React.useEffect(() => {\r\n    listPortfolios().then((portfolios) => {\r\n      portfolios && setPortfolios(portfolios);\r\n    });\r\n  }, [state.updateCount]);\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Stack spacing={1}>\r\n        <List disablePadding>\r\n          {portfolios.map((portfolio, index) => (\r\n            <ListItemButton\r\n              key={index}\r\n              sx={{ border: 1, borderColor: \"#e5e7eb\" }}\r\n            >\r\n              <ShowPortfolioCard\r\n                name={portfolio.name}\r\n                description={portfolio.description}\r\n                account={portfolio.account}\r\n              />\r\n            </ListItemButton>\r\n          ))}\r\n        </List>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { useReducer } from \"react\";\r\nimport AddPortfolioSection from \"../component/AddPortfolioSection\";\r\nimport ShowPortfoliosSection from \"../component/ShowPortfoliosSection\";\r\nimport { SettingsContext, settingsReducer } from \"../context/SettingsContext\";\r\n\r\nconst initialState = {\r\n  updateCount: 0,\r\n};\r\n\r\nexport default function SettingsPage() {\r\n  const [state, dispatch] = useReducer(settingsReducer, initialState);\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{ state, dispatch }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <ShowPortfoliosSection />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AddPortfolioSection />\r\n        </Grid>\r\n      </Grid>\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n"],"names":["listPortfolios","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","result","wrap","_context","prev","next","fetch","BASE_URL","method","headers","sent","status","json","abrupt","stop","apply","arguments","SettingsContext","createContext","settingsReducer","state","action","type","_objectSpread","updateCount","Error","AddPortfolioSection","formRef","React","dispatch","_React$useState","name","description","account","_React$useState2","_slicedToArray","portfolio","setPortfolio","handleChange","e","_e$target","target","value","prevState","_defineProperty","mutation","useMutation","mutationFn","body","JSON","stringify","_jsx","Paper","sx","m","p","children","ref","_jsxs","Grid","container","spacing","item","xs","Typography","variant","TextField","label","fullWidth","placeholder","onChange","required","isLoading","LoadingButton","loading","loadingPosition","startIcon","SaveIcon","disabled","Button","width","onClick","_formRef$current","current","reportValidity","mutate","ShowPortfolioCard","props","Stack","_excluded","defaultTheme","createTheme","Box","options","length","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","theme","useTheme","_extendSxProp","extendSxProp","className","_extendSxProp$compone","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate","ListItemButtonRoot","ButtonBase","rootShouldForwardProp","slot","overridesResolver","styles","ownerState","root","dense","alignItems","alignItemsFlexStart","divider","disableGutters","gutters","_extends2","display","flexGrow","justifyContent","position","textDecoration","minWidth","boxSizing","textAlign","paddingTop","paddingBottom","transition","transitions","create","duration","shortest","backgroundColor","vars","palette","hover","concat","listItemButtonClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","borderBottom","backgroundClip","paddingLeft","paddingRight","useThemeProps","_props$alignItems","_props$autoFocus","autoFocus","_props$component","_props$dense","_props$disableGutters","_props$divider","focusVisibleClassName","_props$selected","context","ListContext","childContext","listItemRef","useEnhancedEffect","classes","slots","composedClasses","composeClasses","getListItemButtonUtilityClass","useUtilityClasses","handleRef","useForkRef","Provider","href","to","ShowPortfoliosSection","portfolios","setPortfolios","then","List","disablePadding","map","index","ListItemButton","border","borderColor","initialState","SettingsPage","_useReducer","useReducer","_useReducer2"],"sourceRoot":""}